on:
  push:
    branches:
      - main
  pull_request:

name: CI

jobs:
  fmt:
    runs-on: ubuntu-latest
    name: Check formatting
    steps:
      - uses: actions/checkout@v4

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: cargo fmt
        run: cargo fmt --all -- --check

  cargo-deny:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1

  clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo clippy
    steps:
      - uses: actions/checkout@v4

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  find-msrv:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step2.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: step2
        run: echo "version=`cat Cargo.toml | sed -n 's/rust-version = "\(.*\)"/\1/p'`" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ${{ matrix.os }}
    needs: find-msrv
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo test
    steps:
      - uses: actions/checkout@v4

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ needs.find-msrv.outputs.version }}

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo test
        run: cargo test

      - name: cargo test -p accesskit_windows
        if: matrix.os == 'windows-2019'
        run: cargo test -p accesskit_windows

  check-android-dex:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: android-actions/setup-android@v2
      - run: sdkmanager "platforms;android-30"
      - run: sdkmanager "build-tools;33.0.2"
      - run: cp platforms/android/classes.dex platforms/android/classes.dex.orig
      - run: ./platforms/android/build-dex.sh
      - run: cmp platforms/android/classes.dex.orig platforms/android/classes.dex

  check-java-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: axel-op/googlejavaformat-action@v4
        with:
          args: "--aosp --set-exit-if-changed"
