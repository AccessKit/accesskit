on:
  release:
    types:
      - published
name: Publish bindings
jobs:
  build-binaries:
    if: startsWith(github.ref_name, 'accesskit_c-v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macOS-latest
            target: aarch64-apple-darwin
            path: macos/arm64
            shared-ext: dylib
            static-ext: a
          - os: macOS-latest
            target: x86_64-apple-darwin
            path: macos/x86_64
            shared-ext: dylib
            static-ext: a
          - os: windows-2019
            target: aarch64-pc-windows-msvc
            path: windows/arm64/msvc
            shared-ext: dll
            static-ext: lib
          - os: windows-2019
            target: i686-pc-windows-msvc
            path: windows/x86/msvc
            shared-ext: dll
            static-ext: lib
          - os: windows-2019
            target: x86_64-pc-windows-msvc
            path: windows/x86_64/msvc
            shared-ext: dll
            static-ext: lib
          - os: ubuntu-latest
            target: i686-pc-windows-gnu
            use-cross: true
            path: windows/x86/mingw
            shared-ext: dll
            static-ext: a
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            use-cross: true
            path: windows/x86_64/mingw
            shared-ext: dll
            static-ext: a
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            use-cross: true
            path: linux/x86
            shared-ext: so
            static-ext: a
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            path: linux/x86_64
            shared-ext: so
            static-ext: a
    name: cargo build
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.use-cross || false }}
          args: --package accesskit_c --release --target ${{ matrix.target }}

      - shell: bash
        run: |
          mkdir -p artifacts/${{ matrix.path }}/shared
          mkdir -p artifacts/${{ matrix.path }}/static

      - if: startsWith(matrix.os, 'windows')
        run: |
          mv target/${{ matrix.target }}/release/accesskit.dll.lib artifacts/${{ matrix.path }}/static
          mv target/${{ matrix.target }}/release/*.pdb artifacts/${{ matrix.path }}/shared
      - if: contains(matrix.path, 'mingw')
        run: mv target/${{ matrix.target }}/release/libaccesskit.dll.a artifacts/${{ matrix.path }}/shared/libaccesskit.a

      - run: |
          mv target/${{ matrix.target }}/release/*.${{ matrix.shared-ext }} artifacts/${{ matrix.path }}/shared
          mv target/${{ matrix.target }}/release/*.${{ matrix.static-ext }} artifacts/${{ matrix.path }}/static

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: artifacts

  generate-headers:
    if: startsWith(github.ref_name, 'accesskit_c-v')
    uses: AccessKit/accesskit/.github/workflows/generate-headers.yml@main

  publish:
    needs: [build-binaries, generate-headers]
    runs-on: ubuntu-latest
    name: Publish
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - run: |
          mkdir -p accesskit_c/lib
          mv artifacts/headers accesskit_c/include
          cp -r artifacts/*/* accesskit_c/lib
          cp -r bindings/c/examples accesskit_c/
          cp bindings/c/accesskit-config.cmake accesskit_c/
          cp bindings/c/*.md accesskit_c/
          cp LICENSE* accesskit_c/
          mv accesskit_c ${{ github.ref_name }}
          zip -r ${{ github.ref_name }}.zip ${{ github.ref_name }}

      - uses: AButler/upload-release-assets@v2.0
        with:
          files: ${{ github.ref_name }}.zip
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}
